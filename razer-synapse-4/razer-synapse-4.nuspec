<?xml version="1.0" encoding="utf-8"?>
<!-- Read this before creating packages: https://docs.chocolatey.org/en-us/create/create-packages -->
<!-- It is especially important to read the above link to understand additional requirements when publishing packages to the community feed aka dot org (https://community.chocolatey.org/packages). -->

<!-- Test your packages in a test environment: https://github.com/chocolatey/chocolatey-test-environment -->

<!--
This is a nuspec. It mostly adheres to https://docs.nuget.org/create/Nuspec-Reference. Chocolatey uses a special version of NuGet.Core that allows us to do more than was initially possible. As such there are certain things to be aware of:

* the package xmlns schema url may cause issues with nuget.exe
* Any of the following elements can ONLY be used by choco tools - projectSourceUrl, docsUrl, mailingListUrl, bugTrackerUrl, packageSourceUrl, provides, conflicts, replaces
* nuget.exe can still install packages with those elements but they are ignored. Any authoring tools or commands will error on those elements
-->

<!-- You can embed software files directly into packages, as long as you are not bound by distribution rights. -->
<!-- * If you are an organization making private packages, you probably have no issues here -->
<!-- * If you are releasing to the community feed, you need to consider distribution rights. -->
<!-- Do not remove this test for UTF-8: if “Ω” doesn’t appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. -->
<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
  <metadata>
    <!-- == PACKAGE SPECIFIC SECTION == -->
    <!-- This section is about this package, although id and version have ties back to the software -->
    <!-- id is lowercase and if you want a good separator for words, use '-', not '.'. Dots are only acceptable as suffixes for certain types of packages, e.g. .install, .portable, .extension, .template -->
    <!-- If the software is cross-platform, attempt to use the same id as the debian/rpm package(s) if possible. -->
    <id>razer-synapse-4</id>
    <!-- version should MATCH as closely as possible with the underlying software -->
    <!-- Is the version a prerelease of a version? https://docs.nuget.org/create/versioning#creating-prerelease-packages -->
    <!-- Note that unstable versions like 0.0.1 can be considered a released version, but it's possible that one can release a 0.0.1-beta before you release a 0.0.1 version. If the version number is final, that is considered a released version and not a prerelease. -->
    <version>2.1.0.766</version>
    <packageSourceUrl>https://github.com/Zoullx/chocolatey-packages/tree/master/razer-synapse-4</packageSourceUrl>
    <!-- owners is a poor name for maintainers of the package. It sticks around by this name for compatibility reasons. It basically means you. -->
    <owners>Zoull</owners>
    <!-- ============================== -->

    <!-- == SOFTWARE SPECIFIC SECTION == -->
    <!-- This section is about the software itself -->
    <title>Razer Synapse 4</title>
    <authors>Razer Inc.</authors>
    <!-- projectUrl is required for the community feed -->
    <projectUrl>https://www.razer.com/synapse-4</projectUrl>
    <!-- There are a number of CDN Services that can be used for hosting the Icon for a package. More information can be found here: https://docs.chocolatey.org/en-us/create/create-packages#package-icon-guidelines -->
    <!-- Here is an example using Githack -->
    <iconUrl>https://cdn.jsdelivr.net/gh/Zoullx/chocolatey-packages/razer-synapse-4/razer-synapse-4.png</iconUrl>
    <copyright>© 2025 Razer Inc.</copyright>
    <!-- If there is a license Url available, it is required for the community feed -->
    <licenseUrl>https://assets.razerzone.com/downloads/software/RazerEndUserLicenseAgreement.pdf</licenseUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <!--<projectSourceUrl>Software Source Location - is the software FOSS somewhere? Link to it with this</projectSourceUrl>-->
    <!--<docsUrl>At what url are the software docs located?</docsUrl>-->
    <!--<mailingListUrl></mailingListUrl>-->
    <!--<bugTrackerUrl></bugTrackerUrl>-->
    <tags>razer synapse</tags>
    <summary>Faster. Smoother. Smarter. Rewriting the rulebook on efficiency, the next evolution of Razer Synapse boasts a fresh, multi-threaded architecture that's up to 30% faster*. Experience unparalleled speed, fluidity, and stability with a streamlined interface that empowers users with swift navigation, enabling independent installations and precise settings configuration.</summary>
    <description>
# Faster. Smoother. Smarter.

Rewriting the rulebook on efficiency, the next evolution of Razer Synapse boasts a fresh, multi-threaded architecture that's up to 30% faster*. Experience unparalleled speed, fluidity, and stability with a streamlined interface that empowers users with swift navigation, enabling independent installations and precise settings configuration.

## Try the new Razer Synapse 4

Backwards compatible with Synapse 3 devices. See full list of [compatible devices](https://mysupport.razer.com/app/answers/detail/a_id/6120).

## Profile Migration

Effortlessly transfer your settings with one click. Synapse 4 now has a sleek tool to bring over your Synapse 3 Profiles, Macros, and Chroma Effects. When upgrading from Synapse 3 to Synapse 4, the Profile Migration tool in Synapse 4 automatically detects and helps manage transfer of your Synapse 3 profiles in one click. Prefer a fresh start? Use the tool to handpick only the Profiles you wish to migrate.

## Faster System Performance

Overall processing is 30% faster than Synapse 3. You will be able to get things done quicker with improved speed on some of the most popular tasks like macro creation, settings configuration, and driver installation.

## Improved System Stability

There's a brand new multi-threaded architecture, enabling processes to function independently. Devices are compartmentalized for increased stability. Now, installation and upgrading of one device doesn't interrupt other devices that are currently in use.

## Brand New Modernized User Interface

We designed a brand-new interface that sports a modernized IU with simpler navigation, making navigation and customization faster. There are also floating tips, making it easier to quickly configure settings. You will also be able to manage additional settings in one place.

## Fan Favorite Features Included

Fan favorite features are included like Hypershift which programs a single button to temporarily unlock a secondary set of functions on top of your existing button assignments, Rapid Trigger to help you perform rapid key-strokes with less effort, and Creating Advanced Macros which are strings of complex button presses to precisely execute game-winning combinations with a single click.
    </description>
    <!-- <releaseNotes>__REPLACE_OR_REMOVE__MarkDown_Okay</releaseNotes> -->
    <!-- =============================== -->

    <!-- Specifying dependencies and version ranges? https://docs.nuget.org/create/versioning#specifying-version-ranges-in-.nuspec-files -->
    <!--<dependencies>
      <dependency id="" version="__MINIMUM_VERSION__" />
      <dependency id="" version="[__EXACT_VERSION__]" />
      <dependency id="" version="[_MIN_VERSION_INCLUSIVE, MAX_VERSION_INCLUSIVE]" />
      <dependency id="" version="[_MIN_VERSION_INCLUSIVE, MAX_VERSION_EXCLUSIVE)" />
      <dependency id="" />
      <dependency id="chocolatey-core.extension" version="1.1.0" />
    </dependencies>-->
    <!-- chocolatey-core.extension - https://community.chocolatey.org/packages/chocolatey-core.extension -->

    <!--<provides>NOT YET IMPLEMENTED</provides>-->
    <!--<conflicts>NOT YET IMPLEMENTED</conflicts>-->
    <!--<replaces>NOT YET IMPLEMENTED</replaces>-->
  </metadata>
  <files>
    <!-- this section controls what actually gets packaged into the Chocolatey package -->
    <file src="tools\**" target="tools" />
  </files>
</package>
